time LD_PRELOAD=build/examples/libsyscall_fsp.so cp -r FSPsrc/FSPdirl1_1/ FSPdest1
MIMIC_APP_ZC - OFF
INFO PendingQueueMgr connected to contrl shm at /shmipc_mgr_20190304
fs_init_multi-> init for key:20190302 map key is: 0
INFO initService connected to contrl shm at /shmipc_mgr_20190302
========> attachPageCacheShm server?:0=========>
[DEBUG] fsTid = 0
[DEBUG] isRetry = 0
shm_open(O_CREAT, fsp_8_1_1) fail warning (will go on to attach) error:File exists.
shm_open(O_CREAT, fsp_48_1_1) fail warning (will go on to attach) error:File exists.
shm_open(O_CREAT, fsp_2048_1_1) fail warning (will go on to attach) error:File exists.
FsLibMemMng:init() will create FsLibLinearListsAllocator threadFsTid: 1
[DEBUG] fsTid = 1
[DEBUG] isRetry = 0
-- stat(FSPdest1) --
-- stat(FSPsrc/FSPdirl1_1/) --
[DEBUG] cur_path: FSPsrc/FSPdirl1_1/ is a dir
-- Req #2: mkdir(FSPdest1, 493d)
 ---- stat(FSPdest1) --
[DEBUG] cur_path: FSPdest1 is a dir
-- open(FSPsrc/FSPdirl1_1/, 591872, 0) from tid 1 --
-- opendir(FSPsrc/FSPdirl1_1/) --
[DEBUG] fsTid = 1
[DEBUG] isRetry = 0
[DEBUG] fsTid = 1
[DEBUG] isRetry = 0
[DEBUG] getBufOwnerInfo
[DEBUG] fsTid = 1
[DEBUG] isRetry = 0
-- fstat(15) --
-- close(15) from tid 1 --
-- stat(FSPsrc/FSPdirl1_1/FSPdirl2_0) --
[DEBUG] cur_path: FSPsrc/FSPdirl1_1/FSPdirl2_0 is a dir
-- Req #9: mkdir(FSPdest1/FSPdirl2_0, 493d)
 ---- stat(FSPdest1/FSPdirl2_0) --
[DEBUG] cur_path: FSPdest1/FSPdirl2_0 is a dir
-- open(FSPsrc/FSPdirl1_1/FSPdirl2_0, 591872, 0) from tid 1 --
-- opendir(FSPsrc/FSPdirl1_1/FSPdirl2_0) --
[DEBUG] fsTid = 1
[DEBUG] isRetry = 0
[DEBUG] fsTid = 1
[DEBUG] isRetry = 0
[DEBUG] getBufOwnerInfo
[DEBUG] fsTid = 1
[DEBUG] isRetry = 0
-- fstat(16) --
-- close(16) from tid 1 --
-- stat(FSPsrc/FSPdirl1_1/FSPdirl2_0/FSPf3) --
[DEBUG] cur_path: FSPsrc/FSPdirl1_1/FSPdirl2_0/FSPf3 is a reg file
-- open(FSPsrc/FSPdirl1_1/FSPdirl2_0/FSPf3, 131072, 0) from tid 1 --
-- fstat(21) --
cp: skipping file 'FSPsrc/FSPdirl1_1/FSPdirl2_0/FSPf3', as it was replaced while being copied
-- close(21) from tid 1 --
-- stat(FSPsrc/FSPdirl1_1/FSPdirl2_1) --
[DEBUG] cur_path: FSPsrc/FSPdirl1_1/FSPdirl2_1 is a dir
-- Req #20: mkdir(FSPdest1/FSPdirl2_1, 493d)
 ---- stat(FSPdest1/FSPdirl2_1) --
[DEBUG] cur_path: FSPdest1/FSPdirl2_1 is a dir
-- open(FSPsrc/FSPdirl1_1/FSPdirl2_1, 591872, 0) from tid 1 --
-- opendir(FSPsrc/FSPdirl1_1/FSPdirl2_1) --
[DEBUG] fsTid = 1
[DEBUG] isRetry = 0
[DEBUG] fsTid = 1
[DEBUG] isRetry = 0
[DEBUG] getBufOwnerInfo
[DEBUG] fsTid = 1
[DEBUG] isRetry = 0
-- fstat(17) --
-- close(17) from tid 1 --
-- stat(FSPsrc/FSPdirl1_1/FSPf2) --
[DEBUG] cur_path: FSPsrc/FSPdirl1_1/FSPf2 is a reg file
-- open(FSPsrc/FSPdirl1_1/FSPf2, 131072, 0) from tid 1 --
-- fstat(20) --
cp: skipping file 'FSPsrc/FSPdirl1_1/FSPf2', as it was replaced while being copied
-- close(20) from tid 1 --

real	0m0.376s
user	0m0.240s
sys	0m0.045s